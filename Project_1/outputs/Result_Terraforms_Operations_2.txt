C:\Users\Administrator\Documents\Software\Cloud_CLIs\terraform\terraform plan -out "solution.plan"
data.azurerm_resource_group.main: Reading...
data.azurerm_image.existing_image: Reading...
data.azurerm_image.existing_image: Read complete after 0s [id=/subscriptions/6fe6105a-78a2-472c-b075-5840c51586de/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myPackerImage]
data.azurerm_resource_group.main: Read complete after 0s [id=/subscriptions/6fe6105a-78a2-472c-b075-5840c51586de/resourceGroups/myResourceGroup]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_lb.main will be created
  + resource "azurerm_lb" "main" {
      + id                   = (known after apply)
      + location             = "eastus"
      + name                 = "myLoadBalancer"
      + private_ip_address   = (known after apply)
      + private_ip_addresses = (known after apply)
      + resource_group_name  = "myResourceGroup"
      + sku                  = "Basic"
      + tags                 = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }

      + frontend_ip_configuration {
          + id                            = (known after apply)
          + inbound_nat_rules             = (known after apply)
          + load_balancer_rules           = (known after apply)
          + name                          = "myFrontEndConfig"
          + outbound_rules                = (known after apply)
          + private_ip_address            = (known after apply)
          + private_ip_address_allocation = (known after apply)
          + private_ip_address_version    = "IPv4"
          + public_ip_address_id          = (known after apply)
          + public_ip_prefix_id           = (known after apply)
          + subnet_id                     = (known after apply)
        }
    }

  # azurerm_lb_backend_address_pool.main will be created
  + resource "azurerm_lb_backend_address_pool" "main" {
      + backend_ip_configurations = (known after apply)
      + id                        = (known after apply)
      + load_balancing_rules      = (known after apply)
      + loadbalancer_id           = (known after apply)
      + name                      = "myBackEndPool"
      + outbound_rules            = (known after apply)
      + resource_group_name       = (known after apply)
    }

  # azurerm_lb_nat_rule.main will be created
  + resource "azurerm_lb_nat_rule" "main" {
      + backend_ip_configuration_id    = (known after apply)
      + backend_port                   = 80
      + enable_floating_ip             = (known after apply)
      + frontend_ip_configuration_id   = (known after apply)
      + frontend_ip_configuration_name = "myFrontEndConfig"
      + frontend_port                  = 80
      + id                             = (known after apply)
      + idle_timeout_in_minutes        = (known after apply)
      + loadbalancer_id                = (known after apply)
      + name                           = "myNatRule"
      + protocol                       = "tcp"
      + resource_group_name            = "myResourceGroup"
    }

  # azurerm_lb_probe.main will be created
  + resource "azurerm_lb_probe" "main" {
      + id                  = (known after apply)
      + interval_in_seconds = 5
      + load_balancer_rules = (known after apply)
      + loadbalancer_id     = (known after apply)
      + name                = "httpProbe"
      + number_of_probes    = 2
      + port                = 80
      + protocol            = "Http"
      + request_path        = "/"
      + resource_group_name = "myResourceGroup"
    }

  # azurerm_linux_virtual_machine.main[0] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_username                  = "azureuser"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "eastus"
      + max_bid_price                   = -1
      + name                            = "myVM-0"
      + network_interface_ids           = (known after apply)
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "myResourceGroup"
      + size                            = "Standard_B1s"
      + source_image_id                 = "/subscriptions/6fe6105a-78a2-472c-b075-5840c51586de/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myPackerImage"
      + tags                            = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }
      + virtual_machine_id              = (known after apply)
      + zone                            = (known after apply)

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDQeVi/oI5ClpwcaKyZvI4nRg/+o9cU+W5u7+aCIC3JLeMPgT2dTIuoTcUPwjNLU/6FL8+eI5fsa0JS+x9698qEXXptMWN/8OSqqaRlPt2wV5Kx7aoiaenzL23v3ha+dpZjYvGWxz+QsUvbmoQ65r7VT+xcN593VaLspMNBRtH7CIii5OSpjKJZOH1t5i3ylqrBlk9vT7APX/FrmtSeDfShZQzCtsPwluigV9elqwfr55CLAvTqi5bmAhInwzc/NH2ayZn4kUvE6batGa/Kuflu/KxSq0Vn319JNh+ZN46uNAbbXJVaO0Dj0z8dHgjJdf4sbj5kHYgUmoKgWupQi5IhraSnn9QFzcGeJH3XQhW5wNz8RROqDeB62eqmPfAHo/Rmmka6wfpu2Brq4pfoX5FxVFRiNQ/g0ZWkttF1eHWi0S3jXwz4nJAKqJCKfbTIlOBjxhfsM3E9RwtIAL2Mwg+QGUb1qKW2nntwTD8Hy2dVcENKjddtglM5ERMzeUgnqP3b0+woJxiSDcl1Ym2HytxJ8YPqrkALe5ZU+BQXzKn/RedJRER6vQi61ZtXu2vL/Rn2HgR2Cgx4xOVbIaLTWVvBy1NwjfJ4AbSxVcy5AnQns+nn3UG8lv8MD5P/oxqxUrjXOLmHBxjNfzEo/r/ch1oIPRMBbCFE6YNptcrfaDaFzw== administrator@WIN-5B9H5IV9439
            EOT
          + username   = "azureuser"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }
    }

  # azurerm_linux_virtual_machine.main[1] will be created
  + resource "azurerm_linux_virtual_machine" "main" {
      + admin_username                  = "azureuser"
      + allow_extension_operations      = true
      + computer_name                   = (known after apply)
      + disable_password_authentication = true
      + extensions_time_budget          = "PT1H30M"
      + id                              = (known after apply)
      + location                        = "eastus"
      + max_bid_price                   = -1
      + name                            = "myVM-1"
      + network_interface_ids           = (known after apply)
      + platform_fault_domain           = -1
      + priority                        = "Regular"
      + private_ip_address              = (known after apply)
      + private_ip_addresses            = (known after apply)
      + provision_vm_agent              = true
      + public_ip_address               = (known after apply)
      + public_ip_addresses             = (known after apply)
      + resource_group_name             = "myResourceGroup"
      + size                            = "Standard_B1s"
      + source_image_id                 = "/subscriptions/6fe6105a-78a2-472c-b075-5840c51586de/resourceGroups/myResourceGroup/providers/Microsoft.Compute/images/myPackerImage"
      + tags                            = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }
      + virtual_machine_id              = (known after apply)
      + zone                            = (known after apply)

      + admin_ssh_key {
          + public_key = <<-EOT
                ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDQeVi/oI5ClpwcaKyZvI4nRg/+o9cU+W5u7+aCIC3JLeMPgT2dTIuoTcUPwjNLU/6FL8+eI5fsa0JS+x9698qEXXptMWN/8OSqqaRlPt2wV5Kx7aoiaenzL23v3ha+dpZjYvGWxz+QsUvbmoQ65r7VT+xcN593VaLspMNBRtH7CIii5OSpjKJZOH1t5i3ylqrBlk9vT7APX/FrmtSeDfShZQzCtsPwluigV9elqwfr55CLAvTqi5bmAhInwzc/NH2ayZn4kUvE6batGa/Kuflu/KxSq0Vn319JNh+ZN46uNAbbXJVaO0Dj0z8dHgjJdf4sbj5kHYgUmoKgWupQi5IhraSnn9QFzcGeJH3XQhW5wNz8RROqDeB62eqmPfAHo/Rmmka6wfpu2Brq4pfoX5FxVFRiNQ/g0ZWkttF1eHWi0S3jXwz4nJAKqJCKfbTIlOBjxhfsM3E9RwtIAL2Mwg+QGUb1qKW2nntwTD8Hy2dVcENKjddtglM5ERMzeUgnqP3b0+woJxiSDcl1Ym2HytxJ8YPqrkALe5ZU+BQXzKn/RedJRER6vQi61ZtXu2vL/Rn2HgR2Cgx4xOVbIaLTWVvBy1NwjfJ4AbSxVcy5AnQns+nn3UG8lv8MD5P/oxqxUrjXOLmHBxjNfzEo/r/ch1oIPRMBbCFE6YNptcrfaDaFzw== administrator@WIN-5B9H5IV9439
            EOT
          + username   = "azureuser"
        }

      + os_disk {
          + caching                   = "ReadWrite"
          + disk_size_gb              = (known after apply)
          + name                      = (known after apply)
          + storage_account_type      = "Standard_LRS"
          + write_accelerator_enabled = false
        }
    }

  # azurerm_network_interface.main[0] will be created
  + resource "azurerm_network_interface" "main" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "eastus"
      + mac_address                   = (known after apply)
      + name                          = "packer-nic-0"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "myResourceGroup"
      + tags                          = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + name                          = "internal"
          + primary                       = (known after apply)
          + private_ip_address            = (known after apply)
          + private_ip_address_allocation = "dynamic"
          + private_ip_address_version    = "IPv4"
          + public_ip_address_id          = (known after apply)
          + subnet_id                     = (known after apply)
        }
    }

  # azurerm_network_interface.main[1] will be created
  + resource "azurerm_network_interface" "main" {
      + applied_dns_servers           = (known after apply)
      + dns_servers                   = (known after apply)
      + enable_accelerated_networking = false
      + enable_ip_forwarding          = false
      + id                            = (known after apply)
      + internal_dns_name_label       = (known after apply)
      + internal_domain_name_suffix   = (known after apply)
      + location                      = "eastus"
      + mac_address                   = (known after apply)
      + name                          = "packer-nic-1"
      + private_ip_address            = (known after apply)
      + private_ip_addresses          = (known after apply)
      + resource_group_name           = "myResourceGroup"
      + tags                          = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }
      + virtual_machine_id            = (known after apply)

      + ip_configuration {
          + name                          = "internal"
          + primary                       = (known after apply)
          + private_ip_address            = (known after apply)
          + private_ip_address_allocation = "dynamic"
          + private_ip_address_version    = "IPv4"
          + public_ip_address_id          = (known after apply)
          + subnet_id                     = (known after apply)
        }
    }

  # azurerm_network_interface_security_group_association.main[0] will be created
  + resource "azurerm_network_interface_security_group_association" "main" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_interface_security_group_association.main[1] will be created
  + resource "azurerm_network_interface_security_group_association" "main" {
      + id                        = (known after apply)
      + network_interface_id      = (known after apply)
      + network_security_group_id = (known after apply)
    }

  # azurerm_network_security_group.main will be created
  + resource "azurerm_network_security_group" "main" {
      + id                  = (known after apply)
      + location            = "eastus"
      + name                = "myNSG"
      + resource_group_name = "myResourceGroup"
      + security_rule       = [
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "22"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "AllowSSH"
              + priority                                   = 1001
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
          + {
              + access                                     = "Allow"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "80"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "AllowHTTP"
              + priority                                   = 1002
              + protocol                                   = "Tcp"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
          + {
              + access                                     = "Deny"
              + destination_address_prefix                 = "*"
              + destination_address_prefixes               = []
              + destination_application_security_group_ids = []
              + destination_port_range                     = "*"
              + destination_port_ranges                    = []
              + direction                                  = "Inbound"
              + name                                       = "DenyAllInbound"
              + priority                                   = 4096
              + protocol                                   = "*"
              + source_address_prefix                      = "*"
              + source_address_prefixes                    = []
              + source_application_security_group_ids      = []
              + source_port_range                          = "*"
              + source_port_ranges                         = []
                # (1 unchanged attribute hidden)
            },
        ]
      + tags                = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }
    }

  # azurerm_public_ip.lb will be created
  + resource "azurerm_public_ip" "lb" {
      + allocation_method       = "Dynamic"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "lb-public-ip"
      + resource_group_name     = "myResourceGroup"
      + sku                     = "Basic"
      + tags                    = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }
    }

  # azurerm_public_ip.vm_ips[0] will be created
  + resource "azurerm_public_ip" "vm_ips" {
      + allocation_method       = "Dynamic"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "vm-public-ip-0"
      + resource_group_name     = "myResourceGroup"
      + sku                     = "Basic"
      + tags                    = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }
    }

  # azurerm_public_ip.vm_ips[1] will be created
  + resource "azurerm_public_ip" "vm_ips" {
      + allocation_method       = "Dynamic"
      + fqdn                    = (known after apply)
      + id                      = (known after apply)
      + idle_timeout_in_minutes = 4
      + ip_address              = (known after apply)
      + ip_version              = "IPv4"
      + location                = "eastus"
      + name                    = "vm-public-ip-1"
      + resource_group_name     = "myResourceGroup"
      + sku                     = "Basic"
      + tags                    = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }
    }

  # azurerm_subnet.main will be created
  + resource "azurerm_subnet" "main" {
      + address_prefix                                 = (known after apply)
      + address_prefixes                               = [
          + "10.0.1.0/24",
        ]
      + enforce_private_link_endpoint_network_policies = false
      + enforce_private_link_service_network_policies  = false
      + id                                             = (known after apply)
      + name                                           = "mySubnet"
      + resource_group_name                            = "myResourceGroup"
      + virtual_network_name                           = "myVNet"
    }

  # azurerm_virtual_network.main will be created
  + resource "azurerm_virtual_network" "main" {
      + address_space         = [
          + "10.0.0.0/16",
        ]
      + guid                  = (known after apply)
      + id                    = (known after apply)
      + location              = "eastus"
      + name                  = "myVNet"
      + resource_group_name   = "myResourceGroup"
      + subnet                = (known after apply)
      + tags                  = {
          + "Environment" = "Development"
          + "Owner"       = "DevOps"
        }
      + vm_protection_enabled = false
    }

  # null_resource.create_ssh_key will be created
  + resource "null_resource" "create_ssh_key" {
      + id = (known after apply)
    }

Plan: 17 to add, 0 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Saved the plan to: solution.plan

To perform exactly these actions, run the following command to apply:
    terraform apply "solution.plan"